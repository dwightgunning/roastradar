version: 2.1
orbs:
  codecov: codecov/codecov@1.0.4
  aws-cli: circleci/aws-cli@0.1.13
jobs:
  build:
    docker:
      - image: circleci/node:10.9.0-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:  # Download and cache dependencies
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-  # fallback to using the latest cache if no exact match is found

      - run:
          name: Install packages
          command: yarn install && yarn install --dev

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Inject environment variables
          command: ./.circleci/replace-envs

      - run:
          name: Build the source (dev)
          command: yarn run build --configuration=test-ci
      - persist_to_workspace:
            root: .
            paths:
                - .
  test:
    docker:
      - image: circleci/node:10.9.0-stretch-browsers
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Lint the source
          command: yarn lint
      - run:
          name: Run the tests
          command: yarn run test-ci
      - store_artifacts:
          path: ./build_artifacts
      - store_test_results:
          path: ./build_artifacts/test-results
      - codecov/upload:
          file: ./build_artifacts/coverage/lcov.info
  build-prod:
    docker:
      - image: circleci/node:10.9.0-stretch
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Inject environment variables
          command: ./.circleci/replace-envs-prod
      - run:
          name: Build the source (prod)
          command: yarn build --configuration=production
      - persist_to_workspace:
            root: .
            paths:
                - .
  deploy-stage:
    executor: aws-cli/default
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: .
      - aws-cli/install
      - aws-cli/configure:
          configure-default-region: false
      - run:
          name: Sync build to S3 Bucket
          command: aws s3 cp ./dist/roastradar s3://${STAGE_AWS_S3_BUCKET_NAME} --recursive
      - run:
          name: Invalidate CloudFront Distribution
          command: aws cloudfront create-invalidation --distribution-id ${STAGE_AWS_CLOUDFRONT_DISTRIBUTION_ID} --paths /
  deploy-prod:
    executor: aws-cli/default
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: .
      - aws-cli/install
      - aws-cli/configure:
          configure-default-region: false
      - run:
          name: Sync build to S3 Bucket
          command: aws s3 cp ./dist-prod/roastradar s3://${PROD_AWS_S3_BUCKET_NAME} --recursive
      - run:
          name: Invalidate CloudFront Distribution
          command: aws cloudfront create-invalidation --distribution-id ${PROD_AWS_CLOUDFRONT_DISTRIBUTION_ID} --paths /
workflows:
  version: 2
  build_and_test: # Non-master branches
    jobs:
      - build:
          filters:
            branches:
              ignore: master
      - test:
          requires:
            - build
  build_test_deploy: # Master branch
    jobs:
      - build:
          filters:
            branches:
              only: master
      - test:
          requires:
            - build
      - build-prod:
          context: aws
          requires:
            - test
      - deploy-stage:
          context: aws
          requires:
            - build-prod
      - approve-staging:
          type: approval
          requires:
           - deploy-stage
      - deploy-prod:
          context: aws
          requires:
            - approve-staging
